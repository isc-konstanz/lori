@startuml loris.components.component.Component
set namespaceSeparator none
class "Component" as loris.components.component.Component {
  data: DataAccess
  connectors: ConnectorAccess
  context: ComponentContext
  get(start: pd.Timestamp, end: pd.Timestamp) -> pd.DataFrame
}
class "Activator" as loris.core.activator.Activator {
  name: str
  {abstract}activate() -> None
  {abstract}deactivate() -> None
  is_active() -> bool
}
class "Registrator" as loris.core.register.registrator.Registrator {
  TYPE: str
  SECTION: str
  SECTIONS: Collection[str]
  context: RegistratorContext
  id: str
  key: str
}
class "Configurator" as loris.core.configs.configurator.Configurator {
  context: Context
  configs: Configurations
  {abstract}configure(configs: Configurations) -> None
  is_configured() -> bool
  is_enabled() -> bool
}
class "ComponentContext" as loris.components.context.ComponentContext {
  SECTION: str
  filter(filter: Callable[[Component], bool]) -> Collection[Component]
  get_all() -> Collection[Component]
  get_first() -> Optional[Component]
  get_last() -> Optional[Component]
  get_types() -> Collection[str]
  has_type() -> bool
}
loris.core.register.registrator.Registrator --|> loris.core.configs.configurator.Configurator
loris.core.activator.Activator --|> loris.core.register.registrator.Registrator
loris.components.component.Component --|> loris.core.activator.Activator
loris.components.component.Component *-- loris.components.context.ComponentContext : __context
loris.components.context.ComponentContext --|> loris.core.activator.Activator
@enduml
